name: Backend CI/CD

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          echo "DB_URL=${{ secrets.DB_URL }}" >> $GITHUB_ENV
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV

      - name: Create application.yml
        run: |
          cat << EOF > application.yml
          spring:
            application:
              name: HouseHub Backend
            datasource:
              url: ${DB_URL}
              username: ${DB_USERNAME}
              password: '${DB_PASSWORD}'
              driver-class-name: com.mysql.cj.jdbc.Driver
            jpa:
              hibernate:
                ddl-auto: update
              properties:
                hibernate:
                  dialect: org.hibernate.dialect.MySQL8Dialect
            devtools:
              livereload:
                enabled: true
              restart:
                enabled: true
          server:
            port: 8080
          EOF

      - name: Debug application.yml
        run: cat application.yml

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission to Gradle
        run: chmod +x gradlew

      - name: Build and Test
        run: ./gradlew -i clean build --no-daemon

      - name: Copy build artifacts
        run: |
          mkdir docker-context
          cp -r build docker-context/ # build 디렉토리 전체를 복사

  docker-build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_REPO }}:latest -f Dockerfile docker-context/ # 컨텍스트를 명시적으로 지정

      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_REPO }}:latest

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: docker-build-and-push

    steps:
      - name: Connect to EC2 and Deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_KEY }}
          script: |
            # 작업 디렉토리 이동
            cd ~/househub

            # 기존 컨테이너 중지 및 제거
            docker-compose down

            # 최신 이미지 가져오기
            docker pull ${{ secrets.DOCKERHUB_REPO }}:latest

            # 불필요한 이미지 삭제
            docker image prune -f

            # 컨테이너 실행
            docker-compose up -d --force-recreate